<?php

use \Drupal\isueo_helpers\ISUEOHelpers\Typesense;

/**
 * Implements hook_ENTITY_TYPE_delete().
 */

function isueo_ts_indexer_node_delete(Drupal\Core\Entity\EntityInterface $entity)
{
  try {
    $config = Drupal::config('isueo_ts_indexer.settings');
    $client = Typesense::getClient($config->get('api_key'));

    $contentTypes = $config->get('content_types');

    if (in_array($entity->bundle(), $contentTypes)) {
      $client->collections[$config->get('collection')]->documents[$config->get('site_name') . ':' . $entity->id()]->delete();
    }
  } catch (Exception $e) {
    Drupal::logger('isueo_ts_indexer')->error('Deleting a node: ' . $e->getMessage());
  }
}

/**
 * Implements hook_ENTITY_TYPE_update().
 */

function isueo_ts_indexer_node_update(Drupal\Core\Entity\EntityInterface $entity)
{
  $config = Drupal::config('isueo_ts_indexer.settings');

  $contentTypes = $config->get('content_types');

  if (in_array($entity->bundle(), $contentTypes)) {
    isueo_ts_indexer_index_node($entity->id(), $config);
  }
}

function isueo_ts_indexer_index_node(int $nid, object $config)
{
  try {
    $node = Drupal::entityTypeManager()->getStorage('node')->load($nid);

    if ($node) {
      $client = Typesense::getClient($config->get('api_key'));
      $record = [
        'id' => $config->get('site_name') . ':' . $nid,
        'title' => $node->getTitle(),
        'site_name' => $config->get('site_name'),
        'url' => $config->get('home_url') . \Drupal::service('path_alias.manager')->getAliasByPath('/node/' . $nid),
        'content_type' => $node->bundle(),
      ];
      $client->collections[$config->get('collection')]->documents->upsert($record);
    }
  } catch (Exception $e) {
    Drupal::logger('isueo_ts_indexer')->error('Saving a node: ' . $e->getMessage());
  }
}

function isueo_ts_indexer_index_all_nodes()
{
  try {
    $config = Drupal::config('isueo_ts_indexer.settings');
    $contentTypes = array_values($config->get('content_types'));

    isueo_ts_indexer_delete_all_from_collection();

    foreach ($contentTypes as $type) {
      $nodes = \Drupal::entityTypeManager()->getStorage('node')->loadByProperties(['type' => $type]);
      foreach ($nodes as $node) {
        isueo_ts_indexer_index_node($node->id(), $config);
      }
    }
  } catch (Exception $e) {
    Drupal::logger('isueo_ts_indexer')->error('Indexing all nodes: ' . $e->getMessage());
  }
}

function isueo_ts_indexer_delete_all_from_collection()
{
    $config = Drupal::config('isueo_ts_indexer.settings');
    $client = Typesense::getClient($config->get('api_key'));
    $client->collections[$config->get('collection')]->documents->delete(['filter_by' => 'site_name:=' . $config->get('site_name'),]);
}
